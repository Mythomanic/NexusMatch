{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useFonts } from 'expo-font';\nimport { Ionicons, Fontisto, FontAwesome, FontAwesome5, Entypo, EvilIcons, Feather, MaterialCommunityIcons, MaterialIcons, AntDesign } from \"@expo/vector-icons\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Carousel } from 'react-native-basic-carousel';\nimport styles from \"./App.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction MessageComponent(_ref) {\n  var personName = _ref.personName,\n    messageDate = _ref.messageDate,\n    backColor = _ref.backColor;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  var screenWidth = Dimensions.get('window').width;\n  var _useFonts = useFonts({\n      'Kaushan': require(\"./assets/fonts/KaushanScript-Regular.ttf\"),\n      \"Allura\": require(\"./assets/fonts/Allura-Regular.ttf\"),\n      \"Montserrat-Black\": require(\"./assets/fonts/Montserrat-Black.ttf\"),\n      \"Montserrat-BlackItalic\": require(\"./assets/fonts/Montserrat-BlackItalic.ttf\"),\n      \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n      \"Montserrat-BoldItalic\": require(\"./assets/fonts/Montserrat-BoldItalic.ttf\"),\n      \"Montserrat-Italic\": require(\"./assets/fonts/Montserrat-Italic.ttf\"),\n      \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\"),\n      \"Montserrat-LightItalic\": require(\"./assets/fonts/Montserrat-LightItalic.ttf\"),\n      \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n      \"Montserrat-MediumItalic\": require(\"./assets/fonts/Montserrat-MediumItalic.ttf\"),\n      \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n      \"Montserrat-Thin\": require(\"./assets/fonts/Montserrat-Thin.ttf\"),\n      \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n      \"Montserrat-SemiBoldItalic\": require(\"./assets/fonts/Montserrat-SemiBoldItalic.ttf\"),\n      \"Montserrat-ThinItalic\": require(\"./assets/fonts/Montserrat-ThinItalic.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 0.60,\n    style: [styles.MessageComponentContainer, {\n      backgroundColor: backColor\n    }],\n    children: [_jsx(View, {\n      style: styles.MessageImageContainer,\n      children: _jsx(Image, {\n        source: require(\"./event.jpg\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          borderRadius: 100\n        },\n        resizeMode: \"cover\"\n      })\n    }), _jsxs(View, {\n      style: {\n        justifyContent: \"center\",\n        flex: 1,\n        padding: 5,\n        alignItems: \"center\",\n        margin: 5\n      },\n      children: [_jsxs(View, {\n        style: {\n          width: \"100%\",\n          flex: 1,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        children: [_jsx(Text, {\n          style: styles.personNameText,\n          fontSize: \"xs\",\n          children: personName\n        }), _jsx(Text, {\n          style: {\n            fontSize: 12,\n            color: \"grey\"\n          },\n          fontSize: \"xs\",\n          children: messageDate\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          columnGap: 1\n        },\n        children: [_jsx(Ionicons, {\n          style: {\n            fontSize: 19\n          },\n          color: \"grey\",\n          name: \"checkmark-done\"\n        }), _jsx(Text, {\n          numberOfLines: 1,\n          style: {\n            fontSize: 13,\n            flex: 1\n          },\n          children: \"Hello World! Hello World!\"\n        })]\n      })]\n    })]\n  });\n}\nexport default MessageComponent;","map":{"version":3,"names":["React","useState","useCallback","View","Image","ImageBackground","Text","ScrollView","TouchableOpacity","Dimensions","SafeAreaProvider","SafeAreaView","TextInput","useFonts","Ionicons","Fontisto","FontAwesome","FontAwesome5","Entypo","EvilIcons","Feather","MaterialCommunityIcons","MaterialIcons","AntDesign","LinearGradient","Carousel","styles","jsx","_jsx","jsxs","_jsxs","MessageComponent","_ref","personName","messageDate","backColor","_useState","_useState2","_slicedToArray","showPassword","setShowPassword","screenWidth","get","width","_useFonts","require","_useFonts2","fontsLoaded","onLayoutRootView","_asyncToGenerator","SplashScreen","hideAsync","activeOpacity","style","MessageComponentContainer","backgroundColor","children","MessageImageContainer","source","height","borderRadius","resizeMode","justifyContent","flex","padding","alignItems","margin","flexDirection","personNameText","fontSize","color","columnGap","name","numberOfLines"],"sources":["C:/Users/oy200/Desktop/nexusmatch/MessageComponent.js"],"sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { View, Image, ImageBackground, Text, ScrollView, TouchableOpacity, Dimensions } from 'react-native'\r\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\r\nimport { TextInput } from 'react-native';\r\nimport { useFonts } from 'expo-font';\r\nimport { Ionicons, Fontisto, FontAwesome, FontAwesome5, Entypo, EvilIcons, Feather, MaterialCommunityIcons, MaterialIcons, AntDesign } from \"react-native-vector-icons\"\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Carousel } from 'react-native-basic-carousel'\r\nimport styles from './App.styles';\r\n\r\n\r\nfunction MessageComponent({ personName, messageDate, backColor }) {\r\n\r\n    const [showPassword, setShowPassword] = useState(true);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [fontsLoaded] = useFonts({\r\n        'Kaushan': require('./assets/fonts/KaushanScript-Regular.ttf'),\r\n        \"Allura\": require('./assets/fonts/Allura-Regular.ttf'),\r\n        \"Montserrat-Black\": require('./assets/fonts/Montserrat-Black.ttf'),\r\n        \"Montserrat-BlackItalic\": require('./assets/fonts/Montserrat-BlackItalic.ttf'),\r\n        \"Montserrat-Bold\": require('./assets/fonts/Montserrat-Bold.ttf'),\r\n        \"Montserrat-BoldItalic\": require('./assets/fonts/Montserrat-BoldItalic.ttf'),\r\n        \"Montserrat-Italic\": require('./assets/fonts/Montserrat-Italic.ttf'),\r\n        \"Montserrat-Light\": require('./assets/fonts/Montserrat-Light.ttf'),\r\n        \"Montserrat-LightItalic\": require('./assets/fonts/Montserrat-LightItalic.ttf'),\r\n        \"Montserrat-Medium\": require('./assets/fonts/Montserrat-Medium.ttf'),\r\n        \"Montserrat-MediumItalic\": require('./assets/fonts/Montserrat-MediumItalic.ttf'),\r\n        \"Montserrat-Regular\": require('./assets/fonts/Montserrat-Regular.ttf'),\r\n        \"Montserrat-Thin\": require('./assets/fonts/Montserrat-Thin.ttf'),\r\n        \"Montserrat-SemiBold\": require('./assets/fonts/Montserrat-SemiBold.ttf'),\r\n        \"Montserrat-SemiBoldItalic\": require('./assets/fonts/Montserrat-SemiBoldItalic.ttf'),\r\n        \"Montserrat-ThinItalic\": require('./assets/fonts/Montserrat-ThinItalic.ttf'),\r\n    });\r\n\r\n    const onLayoutRootView = useCallback(async () => {\r\n        if (fontsLoaded) {\r\n            await SplashScreen.hideAsync();\r\n        }\r\n    }, [fontsLoaded]);\r\n\r\n    if (!fontsLoaded) {\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <TouchableOpacity activeOpacity={0.60} style={[styles.MessageComponentContainer, { backgroundColor: backColor }]}>\r\n\r\n            <View style={styles.MessageImageContainer}>\r\n                <Image\r\n                    source={require(\"./event.jpg\")}\r\n                    style={{ width: \"100%\", height: \"100%\", borderRadius: 100 }}\r\n                    resizeMode='cover'\r\n                />\r\n\r\n            </View>\r\n\r\n            <View style={{ justifyContent: \"center\", flex: 1, padding: 5, alignItems: \"center\", margin: 5, }}>\r\n\r\n\r\n                <View style={{ width: \"100%\", flex: 1, flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", }}>\r\n                    <Text style={styles.personNameText} fontSize=\"xs\">{personName}</Text>\r\n                    <Text style={{ fontSize: 12, color: \"grey\" }} fontSize=\"xs\">{messageDate}</Text>\r\n                </View>\r\n\r\n                <View style={{ width: \"100%\", flex: 1, alignItems: \"center\", justifyContent: \"center\", flexDirection: \"row\", columnGap: 1 }}>\r\n                    <Ionicons style={{ fontSize: 19 }} color={\"grey\"} name=\"checkmark-done\" />\r\n                    <Text numberOfLines={1} style={{ fontSize: 13, flex: 1 }}>Hello World! Hello World!</Text>\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n        </TouchableOpacity>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MessageComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}