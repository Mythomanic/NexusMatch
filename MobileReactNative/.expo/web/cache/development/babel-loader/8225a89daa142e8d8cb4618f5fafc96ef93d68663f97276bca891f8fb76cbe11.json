{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"isAnimated\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { PureComponent } from 'react';\nimport View from \"../view\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PanResponderView = function (_PureComponent) {\n  _inherits(PanResponderView, _PureComponent);\n  var _super = _createSuper(PanResponderView);\n  function PanResponderView() {\n    var _this;\n    _classCallCheck(this, PanResponderView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.initialLeft = 0;\n    _this.initialTop = 0;\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _createClass(PanResponderView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setNativeProps(this.initialLeft, this.initialTop);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var ignorePanning = this.props.ignorePanning;\n      var _this$props$context = this.props.context,\n        isPanning = _this$props$context.isPanning,\n        dragDeltas = _this$props$context.dragDeltas;\n      var _prevProps$context = prevProps.context,\n        prevIsPanning = _prevProps$context.isPanning,\n        prevDragDeltas = _prevProps$context.dragDeltas;\n      if (!ignorePanning && !isPanning && prevIsPanning) {\n        this.onPanEnd();\n      }\n      if (!ignorePanning && isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n        this.onDrag(dragDeltas);\n      }\n    }\n  }, {\n    key: \"onPanEnd\",\n    value: function onPanEnd() {\n      var _this$props$onPanLoca, _this$props, _this$props$context$o, _this$props$context2;\n      var location = {\n        left: this.left,\n        top: this.top\n      };\n      this.initialLeft = this.left || this.initialLeft;\n      this.initialTop = this.top || this.initialTop;\n      (_this$props$onPanLoca = (_this$props = this.props).onPanLocationChanged) == null ? void 0 : _this$props$onPanLoca.call(_this$props, location);\n      (_this$props$context$o = (_this$props$context2 = this.props.context).onPanLocationChanged) == null ? void 0 : _this$props$context$o.call(_this$props$context2, location);\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(deltas) {\n      var left = this.initialLeft + (deltas.x ? Math.round(deltas.x) : 0);\n      var top = this.initialTop + (deltas.y ? Math.round(deltas.y) : 0);\n      this.setNativeProps(left, top);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(left, top) {\n      if (this.ref.current) {\n        var _this$ref$current;\n        (_this$ref$current = this.ref.current) == null ? void 0 : _this$ref$current.setNativeProps == null ? void 0 : _this$ref$current.setNativeProps({\n          style: {\n            left: left,\n            top: top\n          }\n        });\n        this.left = left;\n        this.top = top;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        isAnimated = _this$props2.isAnimated,\n        others = _objectWithoutProperties(_this$props2, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread({\n        animated: isAnimated,\n        ref: this.ref,\n        pointerEvents: 'box-none'\n      }, others), {}, {\n        children: this.props.children\n      }));\n    }\n  }]);\n  return PanResponderView;\n}(PureComponent);\nPanResponderView.displayName = 'PanResponderView';\nPanResponderView.defaultProps = {\n  isAnimated: false\n};\nexport default asPanViewConsumer(PanResponderView);","map":{"version":3,"names":["React","PureComponent","View","asPanViewConsumer","jsx","_jsx","PanResponderView","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","initialLeft","initialTop","ref","createRef","_createClass","key","value","componentDidMount","setNativeProps","componentDidUpdate","prevProps","ignorePanning","props","_this$props$context","context","isPanning","dragDeltas","_prevProps$context","prevIsPanning","prevDragDeltas","onPanEnd","x","y","onDrag","_this$props$onPanLoca","_this$props","_this$props$context$o","_this$props$context2","location","left","top","onPanLocationChanged","deltas","Math","round","current","_this$ref$current","style","render","_this$props2","isAnimated","others","_objectWithoutProperties","_excluded","_objectSpread","animated","pointerEvents","children","displayName","defaultProps"],"sources":["C:/Users/oy200/Desktop/nexusmatch/node_modules/react-native-ui-lib/src/components/panningViews/panResponderView.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport View from \"../view\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\n/**\n * @description: panResponderView component created to making listening to swipe and drag events easier.\n * @notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n *         The PanListenerView is the one that sends the drag\\swipe events.\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PanResponderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/PanResponderView/PanResponderView.gif?raw=true\n */\nclass PanResponderView extends PureComponent {\n  static displayName = 'PanResponderView';\n  static defaultProps = {\n    isAnimated: false\n  };\n  initialLeft = 0;\n  initialTop = 0;\n  ref = React.createRef();\n  componentDidMount() {\n    this.setNativeProps(this.initialLeft, this.initialTop);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      ignorePanning\n    } = this.props;\n    const {\n      isPanning,\n      dragDeltas\n    } = this.props.context;\n    const {\n      isPanning: prevIsPanning,\n      dragDeltas: prevDragDeltas\n    } = prevProps.context;\n    if (!ignorePanning && !isPanning && prevIsPanning) {\n      this.onPanEnd();\n    }\n    if (!ignorePanning && isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n      this.onDrag(dragDeltas);\n    }\n  }\n  onPanEnd() {\n    const location = {\n      left: this.left,\n      top: this.top\n    };\n    this.initialLeft = this.left || this.initialLeft;\n    this.initialTop = this.top || this.initialTop;\n    this.props.onPanLocationChanged?.(location);\n    //@ts-expect-error\n    this.props.context.onPanLocationChanged?.(location);\n  }\n  onDrag(deltas) {\n    const left = this.initialLeft + (deltas.x ? Math.round(deltas.x) : 0);\n    const top = this.initialTop + (deltas.y ? Math.round(deltas.y) : 0);\n    this.setNativeProps(left, top);\n  }\n  setNativeProps(left, top) {\n    if (this.ref.current) {\n      this.ref.current?.setNativeProps?.({\n        style: {\n          left,\n          top\n        }\n      });\n      this.left = left;\n      this.top = top;\n    }\n  }\n  render() {\n    const {\n      isAnimated,\n      ...others\n    } = this.props;\n    return <View animated={isAnimated} ref={this.ref} pointerEvents={'box-none'} {...others}>\n        {this.props.children}\n      </View>;\n  }\n}\nexport default asPanViewConsumer(PanResponderView);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}