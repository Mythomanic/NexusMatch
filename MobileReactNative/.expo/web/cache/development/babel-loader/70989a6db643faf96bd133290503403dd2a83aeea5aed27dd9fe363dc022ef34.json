{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nimport BaseInput from \"../baseInput\";\nimport TextField from \"../textFieldOld\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MaskedInput = function (_BaseInput) {\n  _inherits(MaskedInput, _BaseInput);\n  var _super = _createSuper(MaskedInput);\n  function MaskedInput() {\n    _classCallCheck(this, MaskedInput);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MaskedInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n        if (_.invoke(_this, 'isFocused')) {\n          _.invoke(_this, 'blur');\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        value: ''\n      });\n      this.input.clear();\n    }\n  }, {\n    key: \"renderMaskedText\",\n    value: function renderMaskedText() {\n      var renderMaskedText = this.props.renderMaskedText;\n      var value = this.state.value;\n      if (_.isFunction(renderMaskedText)) {\n        return renderMaskedText(value);\n      }\n      return _jsx(Text, {\n        children: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        containerStyle = _this$props.containerStyle,\n        style = _this$props.style;\n      return _jsxs(TouchableOpacity, {\n        style: containerStyle,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this2.input.focus();\n        },\n        children: [_jsx(TextField, _objectSpread(_objectSpread({\n          ref: function ref(r) {\n            return _this2.input = r;\n          },\n          containerStyle: styles.hiddenInputContainer,\n          style: styles.hiddenInput,\n          enableErrors: false,\n          hideUnderline: true,\n          placeholder: \"\"\n        }, this.props), {}, {\n          caretHidden: true,\n          multiline: false,\n          onChangeText: this.onChangeText\n        })), _jsx(View, {\n          style: styles.maskedInputWrapper,\n          children: this.renderMaskedText()\n        })]\n      });\n    }\n  }]);\n  return MaskedInput;\n}(BaseInput);\nMaskedInput.displayName = 'MaskedInput';\nMaskedInput.propTypes = _objectSpread(_objectSpread({}, TextField.propTypes), {}, {\n  renderMaskedText: PropTypes.elementType.isRequired,\n  containerStyle: ViewPropTypes.style\n});\nexport { MaskedInput as default };\nvar styles = StyleSheet.create({\n  hiddenInputContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    zIndex: 1\n  }),\n  hiddenInput: {\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});","map":{"version":3,"names":["_","PropTypes","React","StyleSheet","Keyboard","ViewPropTypes","BaseInput","TextField","View","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","MaskedInput","_BaseInput","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","componentDidMount","_this","keyboardDidHideListener","addListener","invoke","componentWillUnmount","remove","clear","setState","input","renderMaskedText","props","state","isFunction","children","render","_this2","_this$props","containerStyle","style","activeOpacity","onPress","focus","_objectSpread","ref","r","styles","hiddenInputContainer","hiddenInput","enableErrors","hideUnderline","placeholder","caretHidden","multiline","onChangeText","maskedInputWrapper","displayName","propTypes","elementType","isRequired","default","create","absoluteFillObject","zIndex","color","backgroundColor","height","undefined"],"sources":["C:/Users/oy200/Desktop/nexusmatch/node_modules/react-native-ui-lib/src/components/maskedInput/old.js"],"sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Keyboard} from 'react-native';\nimport {ViewPropTypes} from 'deprecated-react-native-prop-types';\nimport BaseInput from '../baseInput';\nimport TextField from '../textFieldOld';\nimport View from '../view';\nimport Text from '../text';\nimport TouchableOpacity from '../touchableOpacity';\n\n/**\n * @description: Mask Input to create custom looking inputs with custom formats\n * @gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.tsx\n */\nexport default class MaskedInput extends BaseInput {\n  static displayName = 'MaskedInput';\n  static propTypes = {\n    ...TextField.propTypes,\n    /**\n     * callback for rendering the custom input out of the value returns from the actual input\n     */\n    renderMaskedText: PropTypes.elementType.isRequired,\n    /**\n     * container style for the masked input container\n     */\n    containerStyle: ViewPropTypes.style\n  };\n\n  componentDidMount() {\n    this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n      if (_.invoke(this, 'isFocused')) {\n        _.invoke(this, 'blur');\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.keyboardDidHideListener.remove();\n  }\n\n  clear() {\n    this.setState({value: ''});\n    this.input.clear();\n  }\n\n  renderMaskedText() {\n    const {renderMaskedText} = this.props;\n    const {value} = this.state;\n\n    if (_.isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return <Text>{value}</Text>;\n  }\n\n  render() {\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    const {containerStyle, style} = this.props;\n\n    return (\n      <TouchableOpacity style={containerStyle} activeOpacity={1} onPress={() => this.input.focus()}>\n        <TextField\n          ref={r => (this.input = r)}\n          containerStyle={styles.hiddenInputContainer}\n          style={styles.hiddenInput}\n          enableErrors={false}\n          hideUnderline\n          placeholder=\"\"\n          {...this.props}\n          caretHidden\n          multiline={false}\n          onChangeText={this.onChangeText}\n        />\n        <View style={styles.maskedInputWrapper}>{this.renderMaskedText()}</View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  hiddenInputContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1\n  },\n  hiddenInput: {\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}